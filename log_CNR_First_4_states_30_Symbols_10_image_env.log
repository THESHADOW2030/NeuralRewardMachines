nohup: ignoring input
cuda
Experiment 0 on formula task1: visit(pickaxe, lava)
Experiment 0 on formula task1: visit(pickaxe, lava) with method nrm and state type image
{'_state_attributes': {}, '_transition_attributes': {}, '_initial_state': 0, '_states': {0, 1, 2, 3}, '_final_states': {1}, '_state_counter': 4, '_transition_function': {2: {2: ~c1, 1: c1}, 1: {1: True}, 3: {3: ~c0, 1: c0}, 0: {0: ~c0 & ~c1, 1: c0 & c1, 3: c1 & ~c0, 2: c0 & ~c1}}}
{0: {1: 3, 0: 2}, 1: {0: 1, 1: 1}, 2: {0: 2, 1: 1}, 3: {1: 3, 0: 1}}
REWARDS: [0.0, 100.0, 50.0, 50.0]
MAXIMUM REWARD: 100
num_of_states: 30, num_of_symbols: 10, num_automaton_outputs: 3
PASSING num_inputs: 16, num_outputs: 4, hidden_size: 120
Training episodes:   0%|          | 0/10000 [00:00<?, ?episode/s]/home/hdewidar/miniconda3/envs/NRM/lib/python3.9/site-packages/torch/nn/modules/module.py:1751: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  return self._call_impl(*args, **kwargs)
Training episodes:   0%|          | 0/10000 [00:00<?, ?episode/s]
Traceback (most recent call last):
  File "/home/hdewidar/Projects/NeuralRewardMachines/experiments.py", line 92, in <module>
    absl.app.run(main)
  File "/home/hdewidar/miniconda3/envs/NRM/lib/python3.9/site-packages/absl/app.py", line 316, in run
    _run_main(main, args)
  File "/home/hdewidar/miniconda3/envs/NRM/lib/python3.9/site-packages/absl/app.py", line 261, in _run_main
    sys.exit(main(argv))
  File "/home/hdewidar/Projects/NeuralRewardMachines/experiments.py", line 87, in main
    launch_experiments(path, formula, experiment, FLAGS.ENV, FLAGS.METHOD)
  File "/home/hdewidar/Projects/NeuralRewardMachines/experiments.py", line 65, in launch_experiments
    recurrent_A2C(
  File "/home/hdewidar/Projects/NeuralRewardMachines/RL/A2C.py", line 335, in recurrent_A2C
    acc = eval_acceptance(grounder.classifier, grounder.deepAutoma, env.automaton.alphabet,
  File "/home/hdewidar/Projects/NeuralRewardMachines/RL/NRM/utils.py", line 140, in eval_acceptance
    sym_sequences = symbols.view(batch_size, length_seq, numb_of_symbols)
RuntimeError: shape '[1, 6, 5]' is invalid for input of size 60
